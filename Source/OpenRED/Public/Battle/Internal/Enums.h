#pragma once

enum SIDE_ID
{
	SIDE_BEGIN,
	SIDE_1P = SIDE_BEGIN,
	SIDE_2P,
	SIDE_ID_NUM,
	SID_COMMON = SIDE_ID_NUM,
	SIDE_ID_NUM_WITH_COMMON = SIDE_ID_NUM + 1,
	SIDE_ID_INVALID,
};

enum BOM_EVENT : int32
{
	BOM_EVENT_ENTRY,
	BOM_EVENT_ONLYDRAMA_BATTLE_SETUP,
	BOM_EVENT_ARCADE_EVENT_SETUP,
	BOM_EVENT_ARCADE_EVENT_FINISH,
	BOM_EVENT_ENTRY_EVENT_SETUP,
	BOM_EVENT_ENTRY_EVENT_FINISH,
	BOM_EVENT_ENTRY_BG,
	BOM_EVENT_ENTRY_CHARA,
	BOM_EVENT_RESULT_CHARA,
	BOM_EVENT_RESET,
	BOM_EVENT_SET_KEY_FLAG,
	BOM_EVENT_BATTLE_START,
	BOM_EVENT_RESULT_SCREEN_SETUP_FOR_STORY,
	BOM_EVENT_WIN_ACTION,
	BOM_EVENT_MATCH_WIN_ACTION,
	BOM_EVENT_MATCH_RESULT_WAIT,
	BOM_EVENT_DECISION,
	BOM_EVENT_BATTLE_START_CAMERA,
	BOM_EVENT_REQUEST_FINISH_STOP,
	BOM_EVENT_REQUEST_FINISH_CAMERA,
	BOM_EVENT_ENTRY_SCREEN_CONTROL,
	BOM_EVENT_WIN_SCREEN_CONTROL,
	BOM_EVENT_RESET_REMATCH,
	BOM_EVENT_MAIN_MEMBER_CHANGE,
	BOM_EVENT_RESET_ON_MEMBER_CHANGE,
	BOM_EVENT_MATCH_START_EFFECT,
	BOM_EVENT_FINISH_SLOW,
	BOM_EVENT_DESTRUCTION_FINISH_START,
	BOM_EVENT_DRAMATIC_FINISH_START,
	BOM_EVENT_SHENLONG_SYSTEM,
	BOM_EVENT_RESULT_VOICE_COMMON,
	BOM_EVENT_RESULT_VOICE_SPECIAL,
	BOM_EVENT_STOP_RESULT_VOICE,
	BOM_EVENT_DRAMATIC_FINISH_UI_AND_STOP,
	BOM_EVENT_HUD_TUTORIAL_START,
	BOM_EVENT_ENTRY_START,
	BOM_EVENT_ADV_DISP_BATTLE,
	BOM_EVENT_RANNYU_SAVER,
	BOM_EVENT_BBS_EVENT_SETUP,
	BOM_EVENT_BBS_EVENT_FINISH,
	BOM_EVENT_ROUND_RESET_FOR_BG,
	BOM_EVENT_INVALID,
};

enum BEM_STATE : int32
{
	BEM_ModeCheck,
	BEM_OnlyDramaBattle,
	BEM_EntryEvent,
	BEM_EntryChara,
	BEM_RoundReset,
	BEM_DispBattleBegin,
	BEM_DispRound,
	BEM_CheckBattle,
	BEM_CheckBattleOnAdvertise,
	BEM_CheckBattleOnSparring,
	BEM_CheckBattleOnTraining,
	BEM_QuickResetBattle,
	BEM_DispRoundResult,
	BEM_RoundEnd,
	BEM_RoundEndWinAction,
	BEM_MatchEndWinAction,
	BEM_MatchEndWinAction2,
	BEM_MatchEndDrawAction,
	BEM_MatchEndWinActionLocationTest,
	BEM_MatchResult,
	BEM_AdvertiseBattleEnd,
	BEM_SparringBattleEnd,
	BEM_FinishEvent,
	BEM_NewChallengerMatchEnd,
	BEM_VSReMatchMenuOnly,
	BEM_RematchMenuSceneTransition,
	BEM_NextPlayerEntryAction,
	BEM_MemberChangeReset,
	BEM_MatchStartAfterBGTrans,
	BEM_NextNetworkReplay,
	BEM_FinishBattleNoResult,
	BEM_ReplayResult,
	BEM_SpectorResult,
	BEM_ScriptEvent,
	BEM_IdleState,
	BEM_STATE_MAX,
	BEM_STATE_INVALID,
};

enum ROUND_RESULT : int32
{
	ROUND_RESULT_WIN,
	ROUND_RESULT_DOUBLEKO,
	ROUND_RESULT_TIMEUP,
	ROUND_RESULT_CHEAP,
	ROUND_RESULT_SPECIAL,
	ROUND_RESULT_ULTIMATE,
	ROUND_RESULT_ICHIGEKI,
	ROUND_RESULT_PERFECT,
	ROUND_RESULT_MAINMEMBER_DEAD,
	ROUND_RESULT_INVALID,
	ROUND_RESULT_DRAW,
	ROUND_RESULT_LOSE,
	ROUND_RESULT_SILENT,
};

enum ROUND_RESULT_EX : int32
{
	RR_INVALID,
	RR_WIN,
	RR_WIN_SPECIAL,
	RR_WIN_ULTIMATE,
	RR_WIN_ICHIGEKI,
	RR_WIN_TIMEUP,
	RR_DRAW,
	RR_LOSE,
	RR_LOSE_SPECIAL,
	RR_LOSE_ULTIMATE,
	RR_LOSE_ICHIGEKI,
	RR_LOSE_TIMEUP,
	RR_NUM,
};
